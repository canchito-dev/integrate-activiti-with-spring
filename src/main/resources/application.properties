# ----------------------------------------
# This content is released under the MIT License (MIT)
#
# Copyright (c) 2017, canchito-dev
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 
# @author 		José Carlos Mendoza Prego
# @copyright	Copyright (c) 2017, canchito-dev (http://www.canchito-dev.com)
# @license		http://opensource.org/licenses/MIT	MIT License
# @link			https://github.com/canchito-dev/integrate-activiti-with-spring
# ----------------------------------------

# ----------------------------------------
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# spring.datasource.driver-class-name	= Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
# spring.datasource.password			= Login password of the database.
# spring.datasource.url					= JDBC url of the database.
# spring.datasource.username			= Login username of the database.
# ----------------------------------------
spring.datasource.username=username
spring.datasource.password=password
spring.datasource.url=jdbc:mysql://localhost:3306/database?autoReconnect=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# ----------------------------------------
# ACTIVITI BPM (ActivitiProperties)
# spring.activiti.async-executor-activate	= Instructs the Activiti Engine to startup the Async Executor thread pool at startup. Can be true (activate) of false (suspend)
# spring.activiti.async-executor-enabled	= Enables the Async executor instead of the old Job executor. Can be true (enable) of false (disable)
# spring.activiti.check-process-definitions	= Whether to automatically deploy resources. Can be true (deploy) of false (not deploy)
# spring.activiti.history-level				= Following history levels can be configured:
# 												none: skips all history archiving. This is the most performant for runtime process execution, but no historical information will be available.
# 												activity: archives all process instances and activity instances. At the end of the process instance, the latest values of the top level process instance variables will be copied to historic variable instances. No details will be archived.
# 												audit: This is the default. It archives all process instances, activity instances, keeps variable values continuously in sync and all form properties that are submitted so that all user interaction through forms is traceable and can be audited.
# 												full: This is the highest level of history archiving and hence the slowest. This level stores all information as in the audit level plus all other possible details, mostly this are process variable updates.
# spring.activiti.job-executor-activate		= Instructs the Activiti Engine to startup the Job Executor. Can be true (activate) of false (suspend)
# ----------------------------------------
spring.activiti.async-executor-activate=true
spring.activiti.async-executor-enabled=true
spring.activiti.check-process-definitions=false
spring.activiti.history-level=full
spring.activiti.job-executor-activate=false

# ----------------------------------------
# ACTIVITI BPM - Async Job Executor (ActivitiAsycExecutorProperties)
# activiti.async-executor.core-pool-size								= The minimal number of threads that are kept alive in the thread pool for job execution. Default value is 2
# activiti.async-executor.max-pool-size									= The maximum number of threads that are kept alive in the thread pool for job execution. Default value is 10
# activiti.async-executor.keep-alive-time								= The time (in milliseconds) a thread used for job execution must be kept alive before it is destroyed. Default setting is 0. Having a non-default setting of 0 takes resources, but in the case of many job executions it avoids creating new threads all the time. Default value is 5000
# activiti.async-executor.queue-size									= The size of the queue on which jobs to be executed are placed. Default value is 100
# activiti.async-executor.max-timer-jobs-per-acquisition				= The number of timer jobs that are fetched from the database in one query. Default value is 1
# activiti.async-executor.max-async-jobs-due-per-acquisition			= The number of asynchronous jobs due that are fetched from the database in one query. Default value is 1
# activiti.async-executor.default-async-job-acquire-wait-time-in-millis	= The time in milliseconds between asynchronous job due queries being executed. Default value is 10000
# activiti.async-executor.default-timer-job-acquire-wait-time-in-millis	= The time in milliseconds between timer job queries being executed. Default value is 10000
# activiti.async-executor.timer-lock-time-in-millis						= The time in milliseconds that a timer job is locked before being retried again. The Activiti Engine considers the timer job to have failed after this period of time and will retry. Default value is 300000
# activiti.async-executor.async-job-lock-time-in-millis					= The time in milliseconds that an asynchronous job is locked before being retried again. The Activiti Engine considers the asynchronous job to have failed after this period of time and will retry. Default value is 300000
# ----------------------------------------
activiti.async-executor.core-pool-size=2
activiti.async-executor.max-pool-size=10
activiti.async-executor.keep-alive-time=5000
activiti.async-executor.queue-size=100
activiti.async-executor.max-timer-jobs-per-acquisition=1
activiti.async-executor.max-async-jobs-due-per-acquisition=1
activiti.async-executor.default-async-job-acquire-wait-time-in-millis=10000
activiti.async-executor.default-timer-job-acquire-wait-time-in-millis=10000
activiti.async-executor.timer-lock-time-in-millis=300000
activiti.async-executor.async-job-lock-time-in-millis=300000

# ----------------------------------------
# ACTIVITI BPM - Data Source (ActivitiDataSourceProperties)
# activiti.datasource.url							= JDBC URL of the database.
# activiti.datasource.username						= Username to connect to the database.
# activiti.datasource.password						= Password to connect to the database.
# activiti.datasource.driver-class-name				= Implementation of the driver for the specific database type.
# activiti.datasource.jdbc-max-wait-time			= This is a low level setting that gives the pool a chance to print a log status and re-attempt the acquisition of a connection in the case that it is taking unusually long (to avoid failing silently forever if the pool is misconfigured) Default is 20000 (20 seconds).
# activiti.datasource.jdbc-max-checkout-time		= The amount of time in milliseconds a connection can be checked out from the connection pool before it is forcefully returned. Default is 20000 (20 seconds).
# activiti.datasource.jdbc-max-idle-connections		= The number of idle connections that the connection pool at maximum at any time can contain.
# activiti.datasource.jdbc-max-active-connections	= The number of active connections that the connection pool at maximum at any time can contain. Default is 10.
# activiti.datasource.db-enable-event-logging=true
# ----------------------------------------
activiti.datasource.jdbc-max-wait-time=20000
activiti.datasource.jdbc-max-checkout-time=20000
activiti.datasource.jdbc-max-idle-connections=10
activiti.datasource.jdbc-max-active-connections=10
activiti.datasource.db-enable-event-logging=true